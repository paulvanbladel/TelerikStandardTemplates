@page "/"

@using Data
@using Telerik.Blazor.Services
@using System.Threading
@* You can use the service for Telerik localization for your own code as well - for example the grid command buttons *@
@inject ITelerikStringLocalizer Localizer
@* This is the namespace that is generated from the resx files localizer *@
@using TelerikHybrid.Resources.Languages

Current UI culture (used for localization): @Thread.CurrentThread.CurrentUICulture.Name
<br />
Current thread culture (used for date and number formatting): @Thread.CurrentThread.CurrentCulture.Name
<br />

<h1>Hello, world!</h1>

Welcome to your new app.
<br />

<TelerikButton OnClick="@SayHelloHandler" ThemeColor="@(ThemeConstants.Button.ThemeColor.Primary)">@Localizer[nameof(TelerikMessages.Wizard_Next)]</TelerikButton>

<br />

@helloString

@code {
    MarkupString helloString;

    void SayHelloHandler()
    {
        string msg = string.Format("Hello from <strong>Telerik Blazor</strong> at {0}.<br /> Now you can use C# to write front-end!", DateTime.Now);
        helloString = new MarkupString(msg);
    }
}